 

 /* 
 
 1. game board 
 2. each cell 
 3. O, X icon. 
 4. Win or lose message
 5. score board

 6. aside: score board. 
 7. aside: player one, player two
 
 8. when turn change, player bord flashing. 

 */
 @import url('https://fonts.googleapis.com/css?family=Gochi+Hand|Patrick+Hand');
*{

   border: 1px solid #80bd9e;
  border-radius: 0.5em; 
  
  font-family: 'Patrick Hand', cursive;  
  box-sizing: border-box;
 
}



  
  body{
    border: none;
    /* position: relative; */
  }



.svg{ width: 400px; 

}

.container{
  width: 1020px; 
  /* Even though I use grid, I still have to setup the total width of the containcer */

  margin: 8em;
  display:grid; 
  grid-template-columns: 710px 300px; 
  grid-template-rows: auto auto auto; 
  border-radius: 2em;
  border: none;
  /* position: relative;  */
  
}

.header{
  border-top-left-radius: 0.5em;  
  border-top-right-radius: 0.5em;
  background-color: #80bd9e;
  font-size: 125%; 
  font-kerning: auto; 
  grid-column: 1/ 3;
  grid-row: 1/2; 
  text-align: center;
}

.title, .game{
  background-color: #f98866;
  border-radius: 0.3em;
  
}



.game:hover {
  background-color: #df4b55;
  -webkit-transition: background-color 0.9s ease-out;
 -moz-transition: background-color 0.9s ease-out;
 -o-transition: background-color 0.9s ease-out;
 -ms-transition: background-color 0.9s ease-out;
 transition: background-color 0.9s ease-out;
 color: black; 

 border-bottom: black solid 1px

}


 .gameboard{

   grid-column:1/2; 
   grid-row: 2/3; 
   border-bottom-left-radius: 2em;
   /* left: 200px;  */
   
   display: grid;   
   
   justify-content: center; 
   align-content: center; 
   grid-template-columns: 12em 2em 12em 2em 12em;
   grid-template-rows: 12em 2em 12em  2em 12em;
   width: 700px;
   height: 700px;
   border: 0.5em  rgb(223, 188, 199) solid; 

   /* required to animation come back from rotation */
   -webkit-transition: all 1s ease;
   -moz-transition: all 1s ease;
   -o-transition: all 1s ease;
   transition: all 1s ease;

   /* position: relative; */
   
 }

 .cells{
   /* display: grid;  */
   /* position: relative;  */
   grid-template-columns: 1/2;
   grid-template-rows: 1/2;
   border: none;
   display: flex;
   justify-content: center;
   align-content: center;
   
   
 }



.line1{
  grid-column: 2/3;
  grid-row: 1/6; 
  border: none; 
}

.line2{ 
  grid-column: 4/5;
  grid-row: 1/6; 
  border: none; 
}
.line3{

  grid-column: 1/6;
  grid-row: 2/3; 
  border: none; 
}
.line4{

  grid-column: 1/6;
  grid-row: 4/5; 
  border: none; 

}
 
 .line1, .line2, .line3, .line4 {
   /* border: black solid 1em;  */
   border-radius: 2em; 
   background-color:#80bd9e;
   /* z-index:  */
 }  


 /* <object type="image/svg+xml" data="/library/tic-tac-toe.svg"> SVG test</object> */

.aside{
  border: none; 
  text-align: center;
  grid-column: 2/3; 


  display: grid; 
  grid-template-columns: 50% 50%;
  grid-template-rows: 3em 3em 3em;
  border-bottom-left-radius: 2em;
  border-bottom-right-radius: 2em;
}
.player1{
  font-size: 150%;

  background-color:#c9c964;
  color: black; 
  border: 0.5em; 
  animation-iteration-count: infinite; 
  /* transform: scale(3) */
} 

.player2{
  font-size: 150%;

  background-color:  rgb(223, 188, 199);
  color: black;
  border: 0.5em; 
  animation-iteration-count: infinite; 

}

.score{
  font-size: 150%;

  grid-row: 2/3;
  display: grid;
  grid-template-columns: auto;
  grid-template-rows: 50% 50%;  

}
.score1, .score2{
  font-size: 170%; 
}

.turnContainer{
  border: none; 
  display: grid; 

  grid-template-rows: 3em 3em auto auto; 
  grid-template-columns: 1/2; 
  grid-column: 1/3;
}

.turn{ 
  font-size: 170%;
  grid-row: 1/2;
  color:black;
  background-color: #80bd9e;
} 

.turnNumber{
  font-size: 170%; 
  grid-row:2/3;
} 




/*  below is for effect */

.selected {
  border-bottom: yellow solid 2px; 
}

.secondWindow{
  /* background-color: lightsalmon;  */
  display: grid;
  /* font-size: 3em; */
  grid-template-columns: 20em 20em;
  grid-template-rows: 5em 5em; 
  border: solid 1px rgb(159, 96, 71);
  border: none; 
  position: absolute;
  /* why not absolute to the parents window? */
  
  top: 50%;
  left: 50%;
  margin-left: -321px;
  text-align: center;
  color: black;
  z-index: 1333;  

}

.thirdWindow{
  font-size: 200%;
  grid-column: 1/3; 
  grid-row: 1/2; 
  background-color: #f98866;

}

.fourthWindow{
  display: grid; 
    align-items: center; 
  font-size: 150%;

  grid-column:auto;
  grid-row: auto; 
  background-color: #80bd9e;
}
.fifthWindow{
  display: grid; 
  align-items: center; 
  font-size: 150%;

  background-color:#78a6c1;

}


.colorBoard{
  color: #f98866;
  color: #ff420e;
  color: #80bd9e;
  color: #89da59;
  color: #336887;

}

img{
  /* grid-area: 1/1/2/2; */

  /* display: flex;

  position: absolute;  */
  /* left: 50%; 
  top: 50%;  */
  /* justify-content: center;
  align-content: center; */
  height: 10em;
  border: none;
  
}

.red{
  background-color:red;
}



.Usericon1, .Usericon2{
  display: flex;
  justify-content: center;  
  align-items: center; 
  width: auto;
  height: auto;
  
  /* animation-iteration-count: infinite;  */
  
  /* -webkit- animation-duration: 3s; */
  /* -webkit-animation-delay: 4; */
  /* -webkit-animation-iteration-count: infinite; */
} 

.flash{
  
  animation-iteration-count: infinite; 
}
.bounce{
  
  animation-duration: 0.5s; 
  animation-iteration-count: infinite; 
  
}


.mapIcon{
  box-shadow: #78a6c1
}


.fakebody{
  position: relative;
}

.rotate90{
  transform: rotate( 90deg )
}

.rotate180{
  transform: rotate( 180deg );
  -webkit-transition: all 1s ease;
  -moz-transition: all 1s ease;
  -o-transition: all 1s ease;
  transition: all 1s ease;
}
/* Same animation required for gameboard */

.rotate270{
  transform: rotate( 270deg )
}



.board2{
  display: none;
}

/* #someDiv{
  -webkit-transition: all 0.5s ease;
  -moz-transition: all 0.5s ease;
  -o-transition: all 0.5s ease;
  transition: all 0.5s ease;
} */


/* 
.visible{


}



.ele {
 
  
  animation: 2s fadeIn;
  animation-fill-mode: forwards;
  
  visibility: hidden;
}



@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    visibility: visible;
    opacity: 1;
  }
} */